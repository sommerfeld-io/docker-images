---
# @file docker-compose.yml
# @brief Docker Compose configuration to build all Docker images from this repository locally.
#
# @description This Docker Compose configuration build all Docker images from this
# repository locally.
#
# === Prerequisites
#
# This compose config has been developed and tested with Docker version 24.0.2 on top of
# Ubuntu 22.10.
#
# == How to Use
#
# ``docker compose up``


services:

  lint-yaml:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-yaml
    image: cytopia/yamllint:latest
    volumes: &volumes
      - .:/workspaces/docker-images
    working_dir: &workdir /workspaces/docker-images
    command: .
    tty: &tty true

  lint-filenames:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-filenames
    image: lslintorg/ls-lint:1.11.2
    volumes: *volumes
    working_dir: *workdir

  lint-folders:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-folders
    image: sommerfeldio/folderslint:latest
    volumes: *volumes
    working_dir: *workdir
    command: .
    tty: *tty

  # -----------------------------------------------------------------------------------------------

  lint-dockerfile-devcontainer-go:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile-devcontainer-go
    image: &hadolint-image hadolint/hadolint:latest
    volumes: *volumes
    working_dir: *workdir
    entrypoint: hadolint src/main/devcontainer-go/Dockerfile

  devcontainer-go:
    container_name: devcontainer-go
    build: src/main/devcontainer-go
    image: local/devcontainer-go:${DEV_TAG}
    depends_on:
      - lint-dockerfile-devcontainer-go

  # -----------------------------------------------------------------------------------------------

  lint-dockerfile-devcontainer-ubuntu:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile-devcontainer-ubuntu
    image: *hadolint-image
    volumes: *volumes
    working_dir: *workdir
    entrypoint: hadolint src/main/devcontainer-ubuntu/Dockerfile

  devcontainer-ubuntu:
    container_name: devcontainer-ubuntu
    build: src/main/devcontainer-ubuntu
    image: local/devcontainer-ubuntu:${DEV_TAG}
    depends_on:
      - lint-dockerfile-devcontainer-ubuntu

  # -----------------------------------------------------------------------------------------------

  lint-dockerfile-folderslint:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile-folderslint
    image: *hadolint-image
    volumes: *volumes
    working_dir: *workdir
    entrypoint: hadolint src/main/folderslint/Dockerfile

  folderslint:
    container_name: folderslint
    build: src/main/folderslint
    image: local/folderslint:${DEV_TAG}
    depends_on:
      - lint-dockerfile-folderslint

  # -----------------------------------------------------------------------------------------------

  lint-dockerfile-ftp-client:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile-ftp-client
    image: *hadolint-image
    volumes: *volumes
    working_dir: *workdir
    entrypoint: hadolint src/main/ftp-client/Dockerfile

  ftp-client:
    container_name: ftp-client
    build: src/main/ftp-client
    image: local/ftp-client:${DEV_TAG}
    depends_on:
      - lint-dockerfile-ftp-client

  # -----------------------------------------------------------------------------------------------

  lint-dockerfile-jq:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile-jq
    image: *hadolint-image
    volumes: *volumes
    working_dir: *workdir
    entrypoint: hadolint src/main/jq/Dockerfile

  jq:
    container_name: jq
    build: src/main/jq
    image: local/jq:${DEV_TAG}
    depends_on:
      - lint-dockerfile-jq

  # -----------------------------------------------------------------------------------------------

  lint-dockerfile-qodana:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile-qodana
    image: *hadolint-image
    volumes: *volumes
    working_dir: *workdir
    entrypoint: hadolint src/main/qodana/Dockerfile

  qodana:
    container_name: qodana
    build: src/main/qodana
    image: local/qodana:${DEV_TAG}
    depends_on:
      - lint-dockerfile-qodana

  # -----------------------------------------------------------------------------------------------

  lint-dockerfile-source2docs:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile-source2docs
    image: *hadolint-image
    volumes: *volumes
    working_dir: *workdir
    entrypoint: hadolint src/main/source2docs/Dockerfile

  source2docs:
    container_name: source2docs
    build: src/main/source2docs
    image: local/source2docs:${DEV_TAG}
    depends_on:
      - lint-dockerfile-source2docs

  # -----------------------------------------------------------------------------------------------

  lint-dockerfile-vhs4docker:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile-vhs4docker
    image: *hadolint-image
    volumes: *volumes
    working_dir: *workdir
    entrypoint: hadolint src/main/vhs4docker/Dockerfile

  pull-alpine:
    image: alpine:latest

  vhs4docker:
    container_name: vhs4docker
    build: src/main/vhs4docker
    image: local/vhs4docker:${DEV_TAG}
    volumes: &vhs4docker-volumes
      - /var/run/docker.sock:/var/run/docker.sock
      - ./src/main/vhs4docker:/workspaces/docker-images/src/main/vhs4docker
    working_dir: &vhs4docker-workdir /workspaces/docker-images/src/main/vhs4docker
    command: ls.tape
    depends_on:
      pull-alpine:
        condition: service_completed_successfully
      lint-dockerfile-vhs4docker:
        condition: service_completed_successfully

  vhs4docker-demo:
    container_name: vhs4docker-demo
    image: local/vhs4docker:${DEV_TAG}
    volumes: *vhs4docker-volumes
    working_dir: *vhs4docker-workdir
    command: demo.tape
    depends_on:
      vhs4docker:
        condition: service_completed_successfully
